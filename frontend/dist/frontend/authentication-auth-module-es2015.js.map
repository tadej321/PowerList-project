{"version":3,"sources":["./src/app/authentication/auth-routing.module.ts","./src/app/authentication/auth.module.ts","./src/app/authentication/login/login.component.ts","./src/app/authentication/login/login.component.html","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html"],"names":[],"mappings":"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","file":"authentication-auth-module-es2015.js","sourcesContent":["import {RouterModule, Routes} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {SignupComponent} from './signup/signup.component';\r\nimport {AuthGuard} from \"./auth-guard\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent, canActivate: [AuthGuard]},\r\n  {path: 'signup', component: SignupComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import {NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {SignupComponent} from './signup/signup.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {AuthRoutingModule} from './auth-routing.module';\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class AuthModule {\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {AuthService} from '../auth.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {NgForm, NgModel} from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  private authStatusSub: Subscription;\r\n  public correctPassword;\r\n  public correctEmail;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.correctEmail = true;\r\n    this.correctPassword = true;\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe();\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (!form.value.password) {\r\n      this.correctPassword = false;\r\n      return;\r\n    }\r\n\r\n    this.authService.login(form.value.email, form.value.password).catch(e => {\r\n      if (e.error.message === 'Auth failed, password not found') {\r\n        this.correctPassword = false;\r\n      } else if (e.error.message === 'Auth failed, email not found') {\r\n        this.correctEmail = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onFocus() {\r\n    this.correctPassword = true;\r\n    this.correctEmail = true;\r\n  }\r\n\r\n}\r\n","<div style=\"width: 100%; height: 33%;\">\r\n  <section >\r\n    <div>\r\n      <div id=\"container\" class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-10 offset-sm-1 text-center\">\r\n            <div class=\"info-form mt-5\">\r\n              <form class=\"justify-content-center\" (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    ngModel\r\n                    class=\"form-control\"\r\n                    placeholder=\"E-Mail\"\r\n                    #emailInput=\"ngModel\"\r\n                    email\r\n                    (focus)=\"onFocus()\"\r\n                  >\r\n                  <div class=\"text-left text-danger\" *ngIf=\"emailInput.invalid\">Please enter a valid email</div>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"!correctEmail\">Wrong email, try again</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    ngModel\r\n                    #passwordInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    (focus)=\"onFocus()\"\r\n                  >\r\n                  <div class=\"text-left text-danger\" *ngIf=\"!correctPassword\">Wrong password, try again</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary m-2\">Login</button>\r\n                <a routerLink=\"/auth/signup\" class=\"btn btn-primary m-2\">Sign up</a>\r\n              </form>\r\n            </div>\r\n            <br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n","import {Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\r\nimport {AuthService} from '../auth.service';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {NgForm, NgModelGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\n\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n  private authStatusSub: Subscription;\r\n  public passwordMismatch = false;\r\n  public emailTaken = false;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe();\r\n  }\r\n\r\n  onSignup(form: NgForm, event) {\r\n\r\n    // Object.keys(form.controls).forEach((key: string) => {\r\n    //   const abstractControl = form.form.get(key);\r\n    //   console.log(abstractControl);\r\n    // });\r\n    this.passwordMismatch = false;\r\n    this.emailTaken = false;\r\n    if (form.invalid) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    if (form.value.repeatPassword !== form.value.password) {\r\n      this.passwordMismatch = true;\r\n      return;\r\n    }\r\n\r\n    const userCredentials = {\r\n      name: form.value.name,\r\n      surname: form.value.surname,\r\n      email: form.value.email,\r\n      password: form.value.password\r\n    };\r\n\r\n    this.authService.createUser(userCredentials).catch(e => {\r\n      this.emailTaken = true;\r\n    });\r\n  }\r\n\r\n}\r\n","<div style=\"width: 100%; height: 33%;\">\r\n  <section >\r\n    <div>\r\n      <div id=\"container\" class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-10 offset-sm-1 text-center\">\r\n            <div class=\"info-form mt-5\">\r\n              <form class=\"needs-validation justify-content-center\" noValidate (submit)=\"onSignup(signupForm, $event)\" #signupForm=\"ngForm\">\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    ngModel\r\n                    #nameInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Name\"\r\n                    required>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"nameInput.invalid && (nameInput.dirty || nameInput.touched)\">\r\n                    Name is required\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"surname\"\r\n                    ngModel\r\n                    #surnameInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Surname\"\r\n                    required>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"surnameInput.invalid && (surnameInput.dirty || surnameInput.touched)\">\r\n                    Surname is required\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    [ngClass]=\"emailTaken ? 'border-danger' : 'border-none'\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    ngModel\r\n                    class=\"form-control\"\r\n                    placeholder=\"E-Mail\"\r\n                    #emailInput=\"ngModel\"\r\n                    required\r\n                    email>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"emailInput.invalid && (emailInput.dirty)\">\r\n                    E-mail is required\r\n                  </div>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"emailTaken\">This email is taken</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    [ngClass]=\"passwordMismatch ? 'border-danger' : 'border-none'\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    ngModel\r\n                    #passwordInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    required>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"passwordInput.invalid && (passwordInput.dirty || passwordInput.touched)\">\r\n                    Password is required\r\n                  </div>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"passwordMismatch\">Passwords do not match</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    [ngClass]=\"passwordMismatch ? 'border-danger' : 'border-none'\"\r\n                    type=\"password\"\r\n                    name=\"repeatPassword\"\r\n                    ngModel\r\n                    #repeatPasswordInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Repeat password\"\r\n                    required>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"repeatPasswordInput.invalid && (repeatPasswordInput.dirty || repeatPasswordInput.touched)\">\r\n                    Password is required\r\n                  </div>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"passwordMismatch\">Passwords do not match</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary m-2\">Sign up</button>\r\n              </form>\r\n            </div>\r\n            <br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n"],"sourceRoot":"webpack:///"}