{"version":3,"sources":["webpack:///src/app/authentication/auth-routing.module.ts","webpack:///src/app/authentication/auth.module.ts","webpack:///src/app/authentication/login/login.component.ts","webpack:///src/app/authentication/login/login.component.html","webpack:///src/app/authentication/signup/signup.component.ts","webpack:///src/app/authentication/signup/signup.component.html"],"names":["routes","path","component","canActivate","AuthRoutingModule","forChild","imports","exports","AuthModule","declarations","LoginComponent","authService","correctEmail","correctPassword","authStatusSub","getAuthStatusListener","subscribe","form","invalid","value","password","login","email","e","error","message","onLogin","onFocus","templateUrl","styleUrls","SignupComponent","passwordMismatch","emailTaken","unsubscribe","event","preventDefault","repeatPassword","userCredentials","name","surname","createUser","onSignup"],"mappings":"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","file":"authentication-auth-module-es5.js","sourcesContent":["import {RouterModule, Routes} from '@angular/router';\r\nimport {NgModule} from '@angular/core';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {SignupComponent} from './signup/signup.component';\r\nimport {AuthGuard} from \"./auth-guard\";\r\n\r\nconst routes: Routes = [\r\n  {path: 'login', component: LoginComponent, canActivate: [AuthGuard]},\r\n  {path: 'signup', component: SignupComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {}\r\n","import {NgModule, Optional, SkipSelf} from '@angular/core';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {SignupComponent} from './signup/signup.component';\r\nimport {CommonModule} from '@angular/common';\r\nimport {AuthRoutingModule} from './auth-routing.module';\r\nimport {FormsModule} from \"@angular/forms\";\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent,\r\n    SignupComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class AuthModule {\r\n}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {AuthService} from '../auth.service';\r\nimport {Subscription} from 'rxjs';\r\nimport {NgForm, NgModel} from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  private authStatusSub: Subscription;\r\n  public correctPassword;\r\n  public correctEmail;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnDestroy(): void {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.correctEmail = true;\r\n    this.correctPassword = true;\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe();\r\n  }\r\n\r\n  onLogin(form: NgForm) {\r\n    if (form.invalid) {\r\n      return;\r\n    }\r\n\r\n    if (!form.value.password) {\r\n      this.correctPassword = false;\r\n      return;\r\n    }\r\n\r\n    this.authService.login(form.value.email, form.value.password).catch(e => {\r\n      if (e.error.message === 'Auth failed, password not found') {\r\n        this.correctPassword = false;\r\n      } else if (e.error.message === 'Auth failed, email not found') {\r\n        this.correctEmail = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  onFocus() {\r\n    this.correctPassword = true;\r\n    this.correctEmail = true;\r\n  }\r\n\r\n}\r\n","<div style=\"width: 100%; height: 33%;\">\r\n  <section >\r\n    <div>\r\n      <div id=\"container\" class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-10 offset-sm-1 text-center\">\r\n            <div class=\"info-form mt-5\">\r\n              <form class=\"justify-content-center\" (submit)=\"onLogin(loginForm)\" #loginForm=\"ngForm\">\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    ngModel\r\n                    class=\"form-control\"\r\n                    placeholder=\"E-Mail\"\r\n                    #emailInput=\"ngModel\"\r\n                    email\r\n                    (focus)=\"onFocus()\"\r\n                  >\r\n                  <div class=\"text-left text-danger\" *ngIf=\"emailInput.invalid\">Please enter a valid email</div>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"!correctEmail\">Wrong email, try again</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    ngModel\r\n                    #passwordInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    (focus)=\"onFocus()\"\r\n                  >\r\n                  <div class=\"text-left text-danger\" *ngIf=\"!correctPassword\">Wrong password, try again</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary m-2\">Login</button>\r\n                <a routerLink=\"/auth/signup\" class=\"btn btn-primary m-2\">Sign up</a>\r\n              </form>\r\n            </div>\r\n            <br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n","import {Component, ElementRef, OnDestroy, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\r\nimport {AuthService} from '../auth.service';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {NgForm, NgModelGroup} from '@angular/forms';\r\n\r\n@Component({\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\n\r\nexport class SignupComponent implements OnInit, OnDestroy {\r\n  private authStatusSub: Subscription;\r\n  public passwordMismatch = false;\r\n  public emailTaken = false;\r\n\r\n  constructor(public authService: AuthService) {}\r\n\r\n  ngOnDestroy(): void {\r\n    this.authStatusSub.unsubscribe();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authStatusSub = this.authService.getAuthStatusListener().subscribe();\r\n  }\r\n\r\n  onSignup(form: NgForm, event) {\r\n\r\n    // Object.keys(form.controls).forEach((key: string) => {\r\n    //   const abstractControl = form.form.get(key);\r\n    //   console.log(abstractControl);\r\n    // });\r\n    this.passwordMismatch = false;\r\n    this.emailTaken = false;\r\n    if (form.invalid) {\r\n      event.preventDefault();\r\n      return;\r\n    }\r\n    if (form.value.repeatPassword !== form.value.password) {\r\n      this.passwordMismatch = true;\r\n      return;\r\n    }\r\n\r\n    const userCredentials = {\r\n      name: form.value.name,\r\n      surname: form.value.surname,\r\n      email: form.value.email,\r\n      password: form.value.password\r\n    };\r\n\r\n    this.authService.createUser(userCredentials).catch(e => {\r\n      this.emailTaken = true;\r\n    });\r\n  }\r\n\r\n}\r\n","<div style=\"width: 100%; height: 33%;\">\r\n  <section >\r\n    <div>\r\n      <div id=\"container\" class=\"container\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-10 offset-sm-1 text-center\">\r\n            <div class=\"info-form mt-5\">\r\n              <form class=\"needs-validation justify-content-center\" noValidate (submit)=\"onSignup(signupForm, $event)\" #signupForm=\"ngForm\">\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    ngModel\r\n                    #nameInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Name\"\r\n                    required>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"nameInput.invalid && (nameInput.dirty || nameInput.touched)\">\r\n                    Name is required\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"surname\"\r\n                    ngModel\r\n                    #surnameInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Surname\"\r\n                    required>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"surnameInput.invalid && (surnameInput.dirty || surnameInput.touched)\">\r\n                    Surname is required\r\n                  </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    [ngClass]=\"emailTaken ? 'border-danger' : 'border-none'\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    ngModel\r\n                    class=\"form-control\"\r\n                    placeholder=\"E-Mail\"\r\n                    #emailInput=\"ngModel\"\r\n                    required\r\n                    email>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"emailInput.invalid && (emailInput.dirty)\">\r\n                    E-mail is required\r\n                  </div>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"emailTaken\">This email is taken</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    [ngClass]=\"passwordMismatch ? 'border-danger' : 'border-none'\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    ngModel\r\n                    #passwordInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    required>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"passwordInput.invalid && (passwordInput.dirty || passwordInput.touched)\">\r\n                    Password is required\r\n                  </div>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"passwordMismatch\">Passwords do not match</div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                  <input\r\n                    [ngClass]=\"passwordMismatch ? 'border-danger' : 'border-none'\"\r\n                    type=\"password\"\r\n                    name=\"repeatPassword\"\r\n                    ngModel\r\n                    #repeatPasswordInput=\"ngModel\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Repeat password\"\r\n                    required>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"repeatPasswordInput.invalid && (repeatPasswordInput.dirty || repeatPasswordInput.touched)\">\r\n                    Password is required\r\n                  </div>\r\n                  <div class=\"text-left text-danger\" *ngIf=\"passwordMismatch\">Passwords do not match</div>\r\n                </div>\r\n                <button type=\"submit\" class=\"btn btn-primary m-2\">Sign up</button>\r\n              </form>\r\n            </div>\r\n            <br>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n</div>\r\n"]}